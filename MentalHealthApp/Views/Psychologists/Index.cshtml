@model IEnumerable<MentalHealthApp.Models.Psychologist>

@{
    ViewBag.Title = "Psychological Counseling";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAdmin = ViewBag.IsAdmin;
    var appointmentCountsJson = ViewBag.AppointmentCountsJson;
    var psychologistsJson = ViewBag.PsychologistsJson;
}

<h2>Psychologists</h2>

@if (isAdmin)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <form method="post" action="@Url.Action("Export", "Psychologists")">
        <input type="submit" value="Export" class="btn btn-primary" />
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>Photo</th>
                <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                <th>@Html.DisplayNameFor(model => model.LastName)</th>
                <th>@Html.DisplayNameFor(model => model.Specialization)</th>
                <th>@Html.DisplayNameFor(model => model.AverageRating)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><img src="@item.Photo" alt="Psychologist Photo" style="width:100px;height:auto;" /></td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Specialization)</td>
                    <td>
                        @{
                            var averageRating = item.AverageRating;
                            if (averageRating == 0)
                            {
                                <text>No Ratings</text>
                            }
                            else
                            {
                                <text>@Math.Round(averageRating, 1)</text>
                            }
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row justify-content-center align-items-center">
        <div class="col-md-5">
            <canvas id="appointmentsChart"></canvas>
        </div>
        <div class="col-md-5" style="padding: 20px;">
            <img src="~/uploads/chart.jpg" alt="Chart Image" class="img-fluid rounded-image" />
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card text-center h-100" style="background-color: #F9F2E7;">
                        <img src="@Url.Content(item.Photo)" alt="@item.FirstName @item.LastName" class="card-img-top img-thumbnail" />
                        <div class="card-body d-flex flex-column">
                            <h3 class="card-title font-weight-bold">@item.FirstName @item.LastName</h3>
                            <h4 class="card-subtitle mb-2 text-muted">
                                Average Rating: @{
                                    var rating = item.AverageRating;
                                    if (rating == 0)
                                    {
                                        @:No Ratings
                                    }
                                    else
                                    {
                                        @Math.Round(rating, 1)
                                    }
                                }
                            </h4>
                            <p class="card-text">@item.Specialization</p>
                            <div class="mt-auto">
                                <a href="@Url.Action("Create", "Appointments", new { psychologistId = item.Id })" class="btn btn-warning">Book</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/Chart.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("Chart.js loaded successfully");

            var ctx = document.getElementById('appointmentsChart').getContext('2d');

            var appointmentCounts = @Html.Raw(appointmentCountsJson);
            var psychologists = @Html.Raw(psychologistsJson);

            var labels = [];
            var data = [];

            appointmentCounts.forEach(function (item) {
                var psychologist = psychologists.find(p => p.Id === item.PsychologistId);
                if (psychologist) {
                    labels.push(psychologist.FirstName + " " + psychologist.LastName);
                    data.push(item.Count);
                }
            });

            var chartData = {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            };

            var options = {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                        labels: {
                            font: {
                                size: 16, // 设置图例字体大小
                                family: 'Arial, sans-serif', // 设置图例字体
                            }
                        }
                    },
                    title: {
                        display: true,
                        text: 'Psychologist Appointments',
                        font: {
                            size: 18, // 设置标题字体大小
                            family: 'Arial, sans-serif', // 设置标题字体
                        }
                    }
                }
            };

            var appointmentsChart = new Chart(ctx, {
                type: 'pie',
                data: chartData,
                options: options
            });
        });
    </script>
}

<style>
    .card-title {
        font-weight: bold; /* 加粗字体 */
    }

    .card-subtitle {
        font-weight: bold; /* 加粗字体 */
    }

    .card {
        margin-bottom: 20px; /* 增加卡片之间的间距 */
        border: none; /* 移除默认边框 */
    }

    .square-img {
        width: 100%; /* 让图片宽度占满容器 */
        height: 0;
        padding-bottom: 100%; /* 高度设置为宽度的100%，形成正方形 */
        object-fit: cover; /* 确保图片覆盖整个容器 */
    }

    .card .btn-warning {
        background-color: #FFD700; /* 设置按钮颜色 */
        border: none; /* 移除按钮边框 */
        color: black; /* 设置按钮文字颜色 */
    }

        .card .btn-warning:hover {
            background-color: #FFC107; /* 设置按钮悬停颜色 */
        }

    .row {
        margin-bottom: 20px;
    }

    .img-fluid {
        max-width: 100%;
        height: auto;
    }

    h3 {
        font-weight: bold;
    }

    .container .row .col-md-5 .card {
        border-radius: 10px;
        padding: 10px;
    }

    .card-img-top {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }
    .rounded-image {
        border-radius: 50%;
    }
</style>